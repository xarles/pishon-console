<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.dbus.domain.mapper.ProjectUserMapper">
  <resultMap id="BaseResultMap" type="com.creditease.dbus.domain.model.ProjectUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_level" jdbcType="VARCHAR" property="userLevel" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_project_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.creditease.dbus.domain.model.ProjectUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_project_user (project_id, user_id, user_level,
      update_time)
    values (#{projectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userLevel,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.creditease.dbus.domain.model.ProjectUser">
    update t_project_user
    set
      <if test="projectId != null">project_id = #{projectId,jdbcType=INTEGER},</if>
      <if test="userId != null">user_id = #{userId,jdbcType=INTEGER},</if>
      <if test="userLevel != null">user_level = #{userLevel,jdbcType=VARCHAR},</if>
      <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP}</if>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, project_id, user_id, user_level, update_time
    from t_project_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, project_id, user_id, user_level, update_time
    from t_project_user
  </select>
  <select id="selectByProjectId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select
      tu.id,
      tu.user_name userName,
      tu.email,
      tu.phone_num phoneNum,
      tpu.user_level userLevel
    from
      t_project_user tpu
      LEFT JOIN t_user tu ON tpu.user_id = tu.id
    where
      project_id = #{projectId}
  </select>
  <delete id="deleteByProjectId" parameterType="java.lang.Integer">
      delete from t_project_user
      where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <select id="selectProjectExpireEmails" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT tu.email
    FROM t_project_user tpu,t_user tu
    WHERE tpu.user_id = tu.id AND project_id = #{projectId}
  </select>
</mapper>