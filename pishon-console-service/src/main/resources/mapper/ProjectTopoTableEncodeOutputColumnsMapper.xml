<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.dbus.domain.mapper.ProjectTopoTableEncodeOutputColumnsMapper">
  <resultMap id="BaseResultMap" type="com.creditease.dbus.domain.model.ProjectTopoTableEncodeOutputColumns">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_topo_table_id" jdbcType="INTEGER" property="projectTopoTableId" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="encode_plugin_id" jdbcType="INTEGER" property="encodePluginId" />
    <result column="field_type" jdbcType="VARCHAR" property="fieldType" />
    <result column="data_length" jdbcType="INTEGER" property="dataLength" />
    <result column="encode_type" jdbcType="VARCHAR" property="encodeType" />
    <result column="encode_param" jdbcType="VARCHAR" property="encodeParam" />
    <result column="desc_" jdbcType="VARCHAR" property="desc" />
    <result column="truncate" jdbcType="INTEGER" property="truncate" />
    <result column="encode_source" jdbcType="INTEGER" property="encodeSource" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="schema_change_flag" jdbcType="TINYINT" property="schemaChangeFlag" />
    <result column="data_scale" jdbcType="INTEGER" property="dataScale" />
    <result column="data_precision" jdbcType="INTEGER" property="dataPrecision" />
    <result column="schema_change_comment" jdbcType="VARCHAR" property="schemaChangeComment" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_project_topo_table_encode_output_columns
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.creditease.dbus.domain.model.ProjectTopoTableEncodeOutputColumns">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_project_topo_table_encode_output_columns (project_topo_table_id, field_name, encode_plugin_id, 
      field_type, data_length, encode_type, 
      encode_param, desc_, truncate, 
      encode_source, update_time, schema_change_flag, 
      data_scale, data_precision, schema_change_comment
      )
    values (#{projectTopoTableId,jdbcType=INTEGER}, #{fieldName,jdbcType=VARCHAR}, #{encodePluginId,jdbcType=INTEGER}, 
      #{fieldType,jdbcType=VARCHAR}, #{dataLength,jdbcType=INTEGER}, #{encodeType,jdbcType=VARCHAR}, 
      #{encodeParam,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{truncate,jdbcType=INTEGER}, 
      #{encodeSource,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{schemaChangeFlag,jdbcType=TINYINT}, 
      #{dataScale,jdbcType=INTEGER}, #{dataPrecision,jdbcType=INTEGER}, #{schemaChangeComment,jdbcType=VARCHAR}
      )
  </insert>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, project_topo_table_id, field_name, encode_plugin_id, field_type, data_length,
        encode_type, encode_param, desc_, truncate, encode_source, update_time, schema_change_flag,
        data_scale, data_precision, schema_change_comment
        from t_project_topo_table_encode_output_columns
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, project_topo_table_id, field_name, encode_plugin_id, field_type, data_length,
        encode_type, encode_param, desc_, truncate, encode_source, update_time, schema_change_flag,
        data_scale, data_precision, schema_change_comment
        from t_project_topo_table_encode_output_columns
    </select>
  <update id="updateByPrimaryKey" parameterType="com.creditease.dbus.domain.model.ProjectTopoTableEncodeOutputColumns">
    update t_project_topo_table_encode_output_columns
    <set>
      <if test="projectTopoTableId !=null">project_topo_table_id = #{projectTopoTableId,jdbcType=INTEGER},</if>
      <if test="fieldName != null">field_name = #{fieldName,jdbcType=VARCHAR},</if>
      <if test="fieldType != null">field_type = #{fieldType,jdbcType=VARCHAR},</if>
      <if test="dataLength != null">data_length = #{dataLength,jdbcType=INTEGER},</if>
      <if test="encodeType != null">encode_type = #{encodeType,jdbcType=VARCHAR},</if>
      <if test="encodeParam != null">encode_param = #{encodeParam,jdbcType=VARCHAR},</if>
      <if test="desc != null">desc_ = #{desc,jdbcType=VARCHAR},</if>
      <if test="truncate != null">truncate = #{truncate,jdbcType=INTEGER},</if>
      <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
      <if test="encodeSource != null">encode_source = #{encodeSource,jdbcType=INTEGER},</if>
      <if test="schemaChangeFlag != null">schema_change_flag = #{schemaChangeFlag,jdbcType=TINYINT},</if>
      <if test="dataScale != null">data_scale = #{dataScale,jdbcType=INTEGER},</if>
      <if test="dataPrecision != null">data_precision = #{dataPrecision,jdbcType=INTEGER},</if>
      <if test="schemaChangeComment != null">schema_change_comment = #{schemaChangeComment,jdbcType=VARCHAR},</if>
      <!-- user在将encode改为default或其他的时候，encodePluginId可能为空，应该直接更新-->
      encode_plugin_id = #{encodePluginId,jdbcType=INTEGER}
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByTableId" resultType="java.util.Map">
     SELECT
      encodeColumn.field_name columnName,
      encodeColumn.data_length dataLength,
      encodeColumn.encode_type encodeType,
      encodeColumn.encode_param encodeParam,
      encodeColumn.desc_ `desc`,
      encodeColumn.truncate,
      encodeColumn.id,
      encodeColumn.encode_source encodeSource,
      encodeColumn.encode_plugin_id encodePluginId,
      encodeColumn.data_precision dataPrecision,
      encodeColumn.data_scale dataScale,
      encodeColumn.schema_change_flag schemaChangeFlag,
      encodeColumn.schema_change_comment schemaChangeComment,
      tm.data_type dataType
    FROM
    (SELECT
          columns.*,
          ptable.project_id,
          ptable.topo_id,
          ptable.table_id,
          ptable.meta_ver
        FROM
          t_project_topo_table_encode_output_columns columns,
          t_project_topo_table ptable
        WHERE
          columns.project_topo_table_id = #{tableId,jdbcType=INTEGER} AND
          ptable.id = columns.project_topo_table_id

    ) encodeColumn
    LEFT JOIN
         t_project_topo_table_meta_version tm
    ON
          tm.project_id = encodeColumn.project_id  AND
          tm.topo_id = encodeColumn.topo_id  AND
          tm.table_id = encodeColumn.table_id  and
          tm.version = encodeColumn.meta_ver and
          tm.column_name = encodeColumn.field_name
  </select>

  <delete id="deleteByTopoTableId" parameterType="java.lang.Integer">
    delete from t_project_topo_table_encode_output_columns
    where project_topo_table_id = #{tableId,jdbcType=INTEGER}
  </delete>
  <select id="selectByTopoTableIdAndFieldName" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT *
    FROM t_project_topo_table_encode_output_columns columns
    WHERE columns.project_topo_table_id = #{topoTableId,jdbcType=INTEGER} AND
     columns.field_name = #{fieldName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByProjectId" parameterType="java.lang.Integer">
    DELETE from t_project_topo_table_encode_output_columns where id in
    (select a.id from
      (select c.id from t_project_topo_table_encode_output_columns c,t_project_topo_table t
      where c.project_topo_table_id = t.id and t.topo_id = #{projectId}) a )
  </delete>
  <select id="search" resultType="java.util.Map">
    SELECT
        c.id,
        c.project_topo_table_id,
        p.project_name,
        t.topo_name,
        td.ds_name,
        dt.schema_name,
        dt.table_name,
        c.field_name,
        c.encode_type,
        c.encode_param,
        c.encode_source,
        c.encode_plugin_id
    FROM
        t_project_topo_table tt,
        t_project p,
        t_project_topo t,
        t_data_tables dt,
        t_dbus_datasource td,
        t_project_topo_table_encode_output_columns c
    <where>
        tt.project_id = p.id
        AND tt.topo_id = t.id
        AND tt.table_id = dt.id
        AND dt.ds_id = td.id
        AND tt.id = c.project_topo_table_id
        <if test="projectId != null">AND tt.project_id = #{projectId}</if>
        <if test="topoId != null">AND tt.topo_id = #{topoId}</if>
        <if test="dsId != null">AND dt.ds_id = #{dsId}</if>
        <if test="schemaName != null">AND dt.schema_name like "%"#{schemaName}"%"</if>
        <if test="tableName != null">AND dt.table_name like "%"#{tableName}"%"</if>
    </where>
    union all
    SELECT
        c.id,
        tt.id project_topo_table_id,
        p.project_name,
        t.topo_name,
        td.ds_name,
        dt.schema_name,
        dt.table_name,
        c.field_name,
        c.encode_type,
        c.encode_param,
        0 encode_source,
        c.plugin_id encode_plugin_id
    FROM
        t_project_topo_table tt,
        t_project p,
        t_project_topo t,
        t_data_tables dt,
        t_dbus_datasource td,
        t_encode_columns c
    <where>
        tt.project_id = p.id
        AND tt.topo_id = t.id
        AND tt.table_id = dt.id
        AND dt.ds_id = td.id
        AND tt.table_id = c.table_id
        AND tt.output_list_type = 0
        <if test="projectId != null">AND tt.project_id = #{projectId}</if>
        <if test="topoId != null">AND tt.topo_id = #{topoId}</if>
        <if test="dsId != null">AND dt.ds_id = #{dsId}</if>
        <if test="schemaName != null">AND dt.schema_name like "%"#{schemaName}"%"</if>
        <if test="tableName != null">AND dt.table_name like "%"#{tableName}"%"</if>
    </where>
    union all
    SELECT
      c.id,
      null project_topo_table_id,
      null project_name,
      null topo_name,
      td.ds_name,
      dt.schema_name,
      dt.table_name,
      c.field_name,
      c.encode_type,
      c.encode_param,
      0 encode_source,
      c.plugin_id encode_plugin_id
    FROM
      t_data_tables dt,
      t_dbus_datasource td,
      t_encode_columns c
      <where>
          dt.ds_id = td.id
          AND dt.id = c.table_id
          <if test="dsId != null">AND dt.ds_id = #{dsId}</if>
          <if test="schemaName != null">AND dt.schema_name like "%"#{schemaName}"%"</if>
          <if test="tableName != null">AND dt.table_name like "%"#{tableName}"%"</if>
      </where>
    union all
    SELECT
        c.id,
        tt.id project_topo_table_id,
        p.project_name,
        t.topo_name,
        td.ds_name,
        dt.schema_name,
        dt.table_name,
        c.field_name,
        c.encode_type,
        c.encode_param,
        0 encode_source,
        c.plugin_id encode_plugin_id
    FROM
        t_project_topo_table tt,
        t_project p,
        t_project_topo t,
        t_data_tables dt,
        t_dbus_datasource td,
        t_encode_columns c,
        t_project_topo_table_meta_version v
    <where>
        tt.project_id = p.id
        AND tt.topo_id = t.id
        AND tt.table_id = dt.id
        AND dt.ds_id = td.id
        AND tt.table_id = c.table_id
        AND tt.meta_ver = v.version
        AND c.field_name = v.column_name
        AND tt.output_list_type = 1
        AND tt.topo_id = v.topo_id
        <if test="projectId != null">AND tt.project_id = #{projectId}</if>
        <if test="topoId != null">AND tt.topo_id = #{topoId}</if>
        <if test="dsId != null">AND dt.ds_id = #{dsId}</if>
        <if test="schemaName != null">AND dt.schema_name like "%"#{schemaName}"%"</if>
        <if test="tableName != null">AND dt.table_name like "%"#{tableName}"%"</if>
    </where>
  </select>
</mapper>